{"version":3,"sources":["styles/global.ts","services/api.ts","hooks/auth.tsx","components/ToastContainer/Toast/styles.ts","components/ToastContainer/Toast/index.tsx","components/ToastContainer/styles.ts","components/ToastContainer/index.tsx","hooks/toast.tsx","utils/getValidationErrors.ts","components/Tooltip/styles.ts","components/Tooltip/index.tsx","components/Input/styles.ts","components/Input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","pages/SignIn/styles.ts","pages/SignIn/index.tsx","components/Select/styles.ts","components/Select/index.tsx","pages/SignUp/styles.ts","pages/SignUp/index.tsx","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","pages/ForgotPassword/styles.ts","pages/ForgotPassword/index.tsx","pages/ResetPassword/styles.ts","pages/ResetPassword/index.tsx","pages/Profile/styles.ts","utils/getbase64.js","pages/Profile/index.tsx","pages/UpdateAvailability/styles.ts","pages/UpdateAvailability/index.tsx","routes/Route.tsx","pages/Clientes/styles.ts","pages/Clientes/index.tsx","pages/AtualizarValidade/styles.ts","pages/AtualizarValidade/index.tsx","pages/Descricao/styles.ts","pages/Descricao/index.tsx","routes/index.tsx","hooks/index.tsx","App.tsx","index.tsx","assets/logo.svg","assets/sign-up-background.png","assets/sign-in-background.png","assets/logar-background.jpg"],"names":["createGlobalStyle","api","axios","create","baseURL","AuthContext","createContext","AuthProvider","children","useState","token","localStorage","getItem","user","defaults","headers","JSON","parse","data","setData","signIn","useCallback","a","email","password","post","origem","response","setItem","stringify","signOut","removeItem","updateUser","Provider","value","useAuth","context","useContext","Error","toastTypeVariations","info","css","success","error","Container","styled","animated","div","props","type","hasdescription","icons","size","Toast","message","style","removeToast","useToast","useEffect","timer","setTimeout","id","clearTimeout","description","title","onClick","ToastContainer","messages","messagesWithTransitions","useTransition","from","right","opacity","enter","leave","map","item","key","ToastContext","ToastProvider","setMessages","addToast","toast","uuid","state","filter","getValidationErrors","err","validationErrors","inner","forEach","path","Tooltip","className","isErrored","isFocused","isField","Input","name","containerStyle","Icon","icon","rest","inputRef","useRef","setIsFocused","setIsField","useField","fieldName","defaultValue","registerField","handleInputFocus","handleInputBlur","current","ref","data-testid","onFocus","onBlur","color","button","shade","isLoading","Button","loading","disabled","Number","Content","appearFromLeft","keyframes","AnimationContainer","Background","signInBackgroundImg","SignIn","formRef","history","useHistory","handleSubmit","setErrors","schema","Yup","shape","required","validate","abortEarly","push","errors","src","logoImg","alt","onSubmit","FiMail","placeholder","FiLock","to","Select","appearFromRight","signUpBackgroundImg","SignUp","min","roles","avatar_url","width","FiUser","FiBriefcase","selected","hidden","Header","header","HeaderContent","HeaderProfile","main","Schedule","Agendar","NextAppointment","Section","section","Appointment","Calendar","aside","Dashboard","nome","data_agendamento","d","Date","dia","getUTCDate","mes","getUTCMonth","ano","getUTCFullYear","hora","hora_agendamento","toString","split","dataAgendamento","UTC","parseInt","date","fornecedor_id","getAppointments","setisOpenAppointment","isValid","setIsValid","selectedDate","setSelectedDate","currentMonth","setCurrentMonth","avaliacao","setAvaliacao","monthAvailability","appointments","setAppointments","isOpenAppointment","handleDateChange","day","modifiers","available","handleMonthChange","month","tempo","validade","get","params","year","getFullYear","getMonth","getDate","then","appointmentsFormatted","appointment","hourFormatted","format","parseISO","replace","isNaN","disponivel","catch","disableDays","useMemo","monthDay","selectedDateAsText","locale","ptBR","selectedWeekDay","morningAppointments","getHours","afternoonAppointments","nextAppointment","find","isAfter","deleteAgendamento","delete","console","log","descricao","includes","minWidth","isToday","role","marginTop","FiCalendar","display","gap","length","height","alignItems","weekdaysShort","fromMonth","disabledDays","daysOfWeek","onMonthChange","selectedDays","onDayClick","months","ForgotPassword","setLoading","ResetPassword","location","useLocation","password_confirmation","oneOf","URLSearchParams","search","lighten","AvatarInput","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","Profile","formData","put","handleAvatarChange","e","target","files","res","patch","img","initialData","htmlFor","onChange","inicio","final","duracao","FiClock","Route","isPrivate","Component","component","render","pathname","Table","table","usersList","setUsersList","textAlign","index","atuacao","AtualizarValidade","useParams","usuario","setUsuario","Descricao","FiUserCheck","Routes","exact","Clientes","UpdateAvailability","AppProvider","App","basename","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1461d991.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: #312E38;\r\n    color: #f4ede8;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n\r\n  body, input, button, select {\r\n    font-family: 'Roboto Slab', serif;\r\n    font-size: 16px;\r\n  }\r\n\r\n  h1, h2, h3, h4, h5, h6, strong {\r\n    font-weight: 500;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n\r\n  /* input:-webkit-autofill,\r\n  input:-webkit-autofill:hover,\r\n  input:-webkit-autofill:focus,\r\n  input:-webkit-autofill:active  {\r\n    box-shadow: 0 0 0px 1000px #232129 inset;\r\n    transition: \"color 9999s ease-out, background-color 9999s ease-out\";\r\n    transition-delay: 9999s;\r\n  } */\r\n\r\n  .alert {\r\n  width: 100%;\r\n  padding: 20px 16px;\r\n  border-radius: 8px;\r\n  border-style: none;\r\n  border-width: 1px;\r\n  margin-bottom: 1em;\r\n  margin-top: 1em;\r\n  font-size: 16px;\r\n  font-family: 'Roboto Slab', serif;\r\n    font-size: 16px;\r\n}\r\n\r\n.alert.alert-danger {\r\n  background-color: rgb(208 46 54 / 78%);\r\n  border-color: rgba(220, 53, 69, 1);\r\n  color: #FFFFFF;\r\n}\r\n`;\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://api.agendefacil.com.br/\",\r\n});\r\n\r\nexport default api;\r\n","import React, { createContext, useCallback, useState, useContext } from 'react';\n\nimport api from '../services/api';\n\ninterface User {\n  id: string;\n  avatar_url: string;\n  descricao: string;\n  name: string;\n  email: string;\n  validade: Date;\n  roles: any;\n}\n\ninterface AuthState {\n  token: string;\n  user: User;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: User;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n  updateUser(user: User): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@GoBarber:token');\n    const user = localStorage.getItem('@GoBarber:user');\n\n    if (token && user) {\n      api.defaults.headers['x-access-token'] = `Bearer ${token}`;\n      return { token, user: JSON.parse(user) };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('api/auth/login', {\n      email,\n      password,\n      origem: 'Web',\n    });\n\n    const { token, user } = response.data;\n\n    localStorage.setItem('@GoBarber:token', token);\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n\n    api.defaults.headers['x-access-token'] = `Bearer ${token}`;\n\n    setData({ token, user });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@GoBarber:token');\n    localStorage.removeItem('@GoBarber:user');\n\n    setData({} as AuthState);\n  }, []);\n\n  const updateUser = useCallback(\n    (user: User) => {\n      localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n\n      setData({\n        token: data.token,\n        user,\n      });\n    },\n    [setData, data.token],\n  );\n\n  return (\n    <AuthContext.Provider\n      value={{ user: data.user, signIn, signOut, updateUser }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nfunction useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n","import styled, { css } from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\ninterface ContainerProps {\r\n  type?: 'success' | 'error' | 'info';\r\n  hasdescription: number;\r\n}\r\n\r\nconst toastTypeVariations = {\r\n  info: css`\r\n    background: #ebf8ff;\r\n    color: #3172b7;\r\n  `,\r\n  success: css`\r\n    background: #e6fffa;\r\n    color: #2e656a;\r\n  `,\r\n  error: css`\r\n    background: #fddede;\r\n    color: #c53030;\r\n  `,\r\n};\r\n\r\nexport const Container = styled(animated.div)<ContainerProps>`\r\n  width: 360px;\r\n  position: relative;\r\n  padding: 16px 30px 16px 16px;\r\n  border-radius: 10px;\r\n  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);\r\n\r\n  display: flex;\r\n\r\n  & + div {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  ${props => toastTypeVariations[props.type || 'info']}\r\n\r\n  > svg {\r\n    margin: 4px 12px 0 0;\r\n  }\r\n\r\n  div {\r\n    flex: 1;\r\n\r\n    p {\r\n      margin-top: 4px;\r\n      font-size: 14px;\r\n      opacity: 0.8;\r\n      line-height: 20px;\r\n    }\r\n  }\r\n\r\n  button {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 19px;\r\n    opacity: 0.6;\r\n    border: 0;\r\n    background: transparent;\r\n    color: inherit;\r\n  }\r\n\r\n  ${props =>\r\n    !props.hasdescription &&\r\n    css`\r\n      align-items: center;\r\n\r\n      svg {\r\n        margin-top: 0;\r\n      }\r\n    `}\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  FiAlertCircle,\r\n  FiCheckCircle,\r\n  FiInfo,\r\n  FiXCircle,\r\n} from 'react-icons/fi';\r\n\r\nimport { ToastMessage, useToast } from '../../../hooks/toast';\r\nimport { Container } from './styles';\r\n\r\ninterface ToastProps {\r\n  message: ToastMessage;\r\n  style: object;\r\n}\r\n\r\nconst icons = {\r\n  info: <FiInfo size={24} />,\r\n  error: <FiAlertCircle size={24} />,\r\n  success: <FiCheckCircle size={24} />,\r\n};\r\n\r\nconst Toast: React.FC<ToastProps> = ({ message, style }) => {\r\n  const { removeToast } = useToast();\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      removeToast(message.id);\r\n    }, 3000);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [removeToast, message.id]);\r\n\r\n  return (\r\n    <Container\r\n      type={message.type}\r\n      hasdescription={message.description ? 1 : 0}\r\n      style={style}\r\n    >\r\n      {icons[message.type || 'info']}\r\n\r\n      <div>\r\n        <strong>{message.title}</strong>\r\n        {message.description && <p>{message.description}</p>}\r\n      </div>\r\n\r\n      <button onClick={() => removeToast(message.id)} type=\"button\">\r\n        <FiXCircle size={18} />\r\n      </button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  padding: 30px;\r\n  overflow: hidden;\r\n`;\r\n","import React from 'react';\r\nimport { useTransition } from 'react-spring';\r\n\r\nimport { ToastMessage } from '../../hooks/toast';\r\nimport Toast from './Toast';\r\n\r\nimport { Container } from './styles';\r\n\r\ninterface ToastContainerProps {\r\n  messages: ToastMessage[];\r\n}\r\n\r\nconst ToastContainer: React.FC<ToastContainerProps> = ({ messages }) => {\r\n  const messagesWithTransitions = useTransition(\r\n    messages,\r\n    message => message.id,\r\n    {\r\n      from: { right: '-120%', opacity: 0 },\r\n      enter: { right: '0%', opacity: 1 },\r\n      leave: { right: '-120%', opacity: 0 },\r\n    },\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      {messagesWithTransitions.map(({ item, key, props }) => (\r\n        <Toast key={key} message={item} style={props} />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ToastContainer;\r\n","import React, { createContext, useCallback, useContext, useState } from 'react';\r\nimport { uuid } from 'uuidv4';\r\n\r\nimport ToastContainer from '../components/ToastContainer';\r\n\r\nexport interface ToastMessage {\r\n  id: string;\r\n  type?: 'success' | 'error' | 'info';\r\n  title: string;\r\n  description?: string;\r\n}\r\n\r\ninterface ToastContextData {\r\n  addToast(message: Omit<ToastMessage, 'id'>): void;\r\n  removeToast(id: string): void;\r\n}\r\n\r\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\r\n\r\nconst ToastProvider: React.FC = ({ children }) => {\r\n  const [messages, setMessages] = useState<ToastMessage[]>([]);\r\n\r\n  const addToast = useCallback(\r\n    ({ type, title, description }: Omit<ToastMessage, 'id'>) => {\r\n      const id = uuid();\r\n\r\n      const toast = {\r\n        id,\r\n        type,\r\n        title,\r\n        description,\r\n      };\r\n\r\n      setMessages(state => [...state, toast]);\r\n    },\r\n    [],\r\n  );\r\n  const removeToast = useCallback((id: string) => {\r\n    setMessages(state => state.filter(message => message.id !== id));\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ addToast, removeToast }}>\r\n      {children}\r\n      <ToastContainer messages={messages} />\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nfunction useToast(): ToastContextData {\r\n  const context = useContext(ToastContext);\r\n\r\n  if (!context) {\r\n    throw new Error('useToast must be used within a ToastProvider');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nexport { ToastProvider, useToast };\r\n","import { ValidationError } from 'yup';\r\n\r\ninterface Errors {\r\n  [key: string]: string;\r\n}\r\n\r\nexport default function getValidationErrors(err: ValidationError): Errors {\r\n  const validationErrors: Errors = {};\r\n\r\n  err.inner.forEach(error => {\r\n    validationErrors[error.path] = error.message;\r\n  });\r\n\r\n  return validationErrors;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n\r\n  span {\r\n    width: 160px;\r\n    background: #ff9000;\r\n    padding: 8px;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    opacity: 0;\r\n    transition: opacity 0.4s;\r\n    visibility: hidden;\r\n\r\n    position: absolute;\r\n    bottom: calc(100% + 12px);\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n\r\n    color: #312e38;\r\n\r\n    &::before {\r\n      content: '';\r\n      border-style: solid;\r\n      border-color: #ff9000 transparent;\r\n      border-width: 6px 6px 0 6px;\r\n      bottom: 20px;\r\n      top: 100%;\r\n      position: absolute;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n    }\r\n  }\r\n\r\n  &:hover span {\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\ninterface TooltipProps {\r\n  title: string;\r\n  className?: string;\r\n}\r\n\r\nconst Tooltip: React.FC<TooltipProps> = ({\r\n  title,\r\n  className = '',\r\n  children,\r\n}) => {\r\n  return (\r\n    <Container className={className}>\r\n      {children}\r\n      <span>{title}</span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import styled, { css } from 'styled-components';\r\n\r\nimport Tooltip from '../Tooltip';\r\n\r\ninterface ContainerProps {\r\n  isFocused: boolean;\r\n  isField: boolean;\r\n  isErrored: boolean;\r\n}\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n  background: #232129;\r\n  border-radius: 10px;\r\n  padding: 16px;\r\n  width: 100%;\r\n\r\n  border: 2px solid #232129;\r\n  color: #666360;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & + div {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  ${props =>\r\n    props.isErrored &&\r\n    css`\r\n      border-color: #c53030;\r\n    `}\r\n\r\n  ${props =>\r\n    props.isFocused &&\r\n    css`\r\n      color: #d02e36;\r\n      border-color: #d02e36;\r\n    `}\r\n\r\n  ${props =>\r\n    props.isField &&\r\n    css`\r\n      color: #d02e36;\r\n    `}\r\n\r\n  input {\r\n    flex: 1;\r\n    background: transparent;\r\n    border: 0;\r\n    color: #f4ede8;\r\n    &::placeholder {\r\n      color: #666360;\r\n    }\r\n    \r\n \r\n  }\r\n  input[type=\"time\" i]::-webkit-calendar-picker-indicator {\r\n    visibility: hidden;\r\n    }\r\n\r\n  svg {\r\n    margin-right: 16px;\r\n  }\r\n\r\n`;\r\n\r\nexport const Error = styled(Tooltip)`\r\n  height: 20px;\r\n  margin-left: 16px;\r\n  svg {\r\n    margin: 0;\r\n  }\r\n\r\n  span {\r\n    background: #c53030;\r\n    color: #f4ede8;\r\n\r\n    &::before {\r\n      border-color: #c53030 transparent;\r\n    }\r\n  }\r\n`;\r\n","import React, {\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  InputHTMLAttributes,\r\n} from 'react';\r\nimport { IconBaseProps } from 'react-icons';\r\nimport { FiAlertCircle } from 'react-icons/fi';\r\nimport { useField } from '@unform/core';\r\n\r\nimport { Container, Error } from './styles';\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  containerStyle?: React.CSSProperties;\r\n  icon?: React.ComponentType<IconBaseProps>;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({\r\n  name,\r\n  containerStyle = {},\r\n  icon: Icon,\r\n  ...rest\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isField, setIsField] = useState(false);\r\n  const { fieldName, defaultValue, error, registerField } = useField(name);\r\n\r\n  const handleInputFocus = useCallback(() => {\r\n    setIsFocused(true);\r\n  }, []);\r\n\r\n  const handleInputBlur = useCallback(() => {\r\n    setIsFocused(false);\r\n\r\n    setIsField(!!inputRef.current?.value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRef.current,\r\n      path: 'value',\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  return (\r\n    <Container\r\n      style={containerStyle}\r\n      isErrored={!!error}\r\n      isField={isField}\r\n      isFocused={isFocused}\r\n      data-testid=\"input-container\"\r\n    >\r\n      {Icon && <Icon size={20} />}\r\n      <input\r\n        onFocus={handleInputFocus}\r\n        onBlur={handleInputBlur}\r\n        defaultValue={defaultValue}\r\n        ref={inputRef}\r\n        {...rest}\r\n      />\r\n\r\n      {error && (\r\n        <Error title={error}>\r\n          <FiAlertCircle color=\"c53030\" size={20} />\r\n        </Error>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\nexport default Input;\r\n","import styled from 'styled-components';\r\nimport { shade } from 'polished';\r\n\r\ninterface ContainerProps {\r\n  isLoading: number;\r\n}\r\n\r\nexport const Container = styled.button<ContainerProps>`\r\n  background: #d02e36;\r\n  height: 56px;\r\n  border-radius: 10px;\r\n  border: 0;\r\n  padding: 0 16px;\r\n  color: white;\r\n  width: 100%;\r\n  font-weight: 500;\r\n  margin-top: 16px;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background: ${shade(0.2, '#d02e36')};\r\n  }\r\n\r\n  cursor: ${({ isLoading }) => (isLoading ? 'not-allowed' : 'pointer')};\r\n`;\r\n","import React, { ButtonHTMLAttributes } from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\r\n  loading?: boolean;\r\n};\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, loading, ...rest }) => {\r\n  return (\r\n    <Container\r\n      disabled={loading}\r\n      isLoading={Number(loading)}\r\n      type=\"button\"\r\n      {...rest}\r\n    >\r\n      {loading ? 'Carregando...' : children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { shade } from 'polished';\r\n\r\nimport signInBackgroundImg from '../../assets/logar-background.jpg';\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n\r\n  display: flex;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 100%;\r\n  max-width: 700px;\r\n`;\r\n\r\nconst appearFromLeft = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(-50px)\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0)\r\n  }\r\n`;\r\n\r\nexport const AnimationContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  animation: ${appearFromLeft} 1s;\r\n\r\n  form {\r\n    margin: 30px 0;\r\n    width: 340px;\r\n    text-align: center;\r\n\r\n    h1 {\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    a {\r\n      color: #f4ede8;\r\n      display: block;\r\n      margin-top: 10px;\r\n      text-decoration: none;\r\n      transition: color 0.3s;\r\n\r\n      &:hover {\r\n        color: ${shade(0.2, '#f4ede8')};\r\n      }\r\n    }\r\n  }\r\n\r\n  > a {\r\n    color: #ff9000;\r\n    display: block;\r\n    margin-top: 24px;\r\n    text-decoration: none;\r\n    transition: color 0.3s;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    svg {\r\n      margin-right: 16px;\r\n    }\r\n\r\n    &:hover {\r\n      color: ${shade(0.2, '#ff9000')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  flex: 1;\r\n  background: url(${signInBackgroundImg}) no-repeat center;\r\n  background-size: cover;\r\n`;\r\n","import React, { useRef, useCallback } from 'react';\r\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { useAuth } from '../../hooks/auth';\r\nimport { useToast } from '../../hooks/toast';\r\nimport getValidationErrors from '../../utils/getValidationErrors';\r\n\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\nimport { Container, Content, AnimationContainer, Background } from './styles';\r\n\r\nimport logoImg from '../../assets/logo.svg';\r\n\r\ninterface SignInFormData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst SignIn: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null);\r\n  const history = useHistory();\r\n\r\n  const { signIn } = useAuth();\r\n  const { addToast } = useToast();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: SignInFormData) => {\r\n      try {\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          email: Yup.string()\r\n            .required('E-mail é obrigatório')\r\n            .email('Digite um e-mail válido'),\r\n          password: Yup.string().required('Senha é obrigatória'),\r\n        });\r\n\r\n        await schema.validate(data, { abortEarly: false });\r\n\r\n        await signIn({\r\n          email: data.email,\r\n          password: data.password,\r\n        });\r\n\r\n        history.push('/dashboard');\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n\r\n          formRef.current?.setErrors(errors);\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro na autenticação',\r\n          description:\r\n            'Ocorreu um error ao fazer login, cheque as credenciais.',\r\n        });\r\n      }\r\n    },\r\n    [signIn, addToast, history],\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <AnimationContainer>\r\n          <img src={logoImg} alt=\"Agende Fácil\" />\r\n\r\n          <Form ref={formRef} onSubmit={handleSubmit}>\r\n            <h1>Faça seu logon</h1>\r\n\r\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\r\n\r\n            <Input\r\n              name=\"password\"\r\n              icon={FiLock}\r\n              type=\"password\"\r\n              placeholder=\"Senha\"\r\n            />\r\n\r\n            <Button type=\"submit\">Entrar</Button>\r\n\r\n            {/* <Link to=\"/forgot-password\">Esqueci minha senha</Link> */}\r\n          </Form>\r\n\r\n          <Link to=\"/signup\">\r\n            <FiLogIn />\r\n            Criar conta\r\n          </Link>\r\n        </AnimationContainer>\r\n      </Content>\r\n      <Background />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import styled, { css } from 'styled-components';\r\n\r\nimport Tooltip from '../Tooltip';\r\n\r\ninterface ContainerProps {\r\n  isFocused: boolean;\r\n  isField: boolean;\r\n  isErrored: boolean;\r\n}\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n  background: #232129;\r\n  border-radius: 10px;\r\n  padding: 16px;\r\n  width: 100%;\r\n\r\n  border: 2px solid #232129;\r\n  color: #666360;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & + div {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  ${props =>\r\n    props.isErrored &&\r\n    css`\r\n      border-color: #c53030;\r\n    `}\r\n\r\n  ${props =>\r\n    props.isFocused &&\r\n    css`\r\n      color: #d02e36;\r\n      border-color: #d02e36;\r\n    `}\r\n\r\n  ${props =>\r\n    props.isField &&\r\n    css`\r\n      color: #d02e36;\r\n    `}\r\n\r\n  select {\r\n    flex: 1;\r\n    background: transparent;\r\n    border: 0;\r\n    color: #f4ede8;\r\n    width: 100%;\r\n    &::placeholder {\r\n      color: #666360;\r\n    }\r\n    option {\r\n      background: #333333;\r\n      border: none;\r\n    }\r\n  }\r\n\r\n  svg {\r\n    margin-right: 16px;\r\n  }\r\n`;\r\n\r\nexport const Error = styled(Tooltip)`\r\n  height: 20px;\r\n  margin-left: 16px;\r\n  svg {\r\n    margin: 0;\r\n  }\r\n\r\n  span {\r\n    background: #c53030;\r\n    color: #f4ede8;\r\n\r\n    &::before {\r\n      border-color: #c53030 transparent;\r\n    }\r\n  }\r\n`;\r\n","import React, {\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  SelectHTMLAttributes,\r\n} from 'react';\r\nimport { IconBaseProps } from 'react-icons';\r\nimport { FiAlertCircle } from 'react-icons/fi';\r\nimport { useField } from '@unform/core';\r\n\r\nimport { Container, Error } from './styles';\r\n\r\ninterface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  name: string;\r\n  containerStyle?: React.CSSProperties;\r\n  icon?: React.ComponentType<IconBaseProps>;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  name,\r\n  containerStyle = {},\r\n  icon: Icon,\r\n  ...rest\r\n}) => {\r\n  const inputRef = useRef<HTMLSelectElement>(null);\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isField, setIsField] = useState(false);\r\n  const { fieldName, defaultValue, error, registerField } = useField(name);\r\n\r\n  const handleInputFocus = useCallback(() => {\r\n    setIsFocused(true);\r\n  }, []);\r\n\r\n  const handleInputBlur = useCallback(() => {\r\n    setIsFocused(false);\r\n\r\n    setIsField(!!inputRef.current?.value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRef.current,\r\n      path: 'value',\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  return (\r\n    <Container\r\n      style={containerStyle}\r\n      isErrored={!!error}\r\n      isField={isField}\r\n      isFocused={isFocused}\r\n      data-testid=\"input-container\"\r\n    >\r\n      {Icon && <Icon size={20} />}\r\n      <select\r\n        onFocus={handleInputFocus}\r\n        onBlur={handleInputBlur}\r\n        defaultValue={defaultValue}\r\n        ref={inputRef}\r\n        {...rest}\r\n      />\r\n\r\n      {error && (\r\n        <Error title={error}>\r\n          <FiAlertCircle color=\"c53030\" size={20} />\r\n        </Error>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\nexport default Select;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { shade } from 'polished';\r\n\r\nimport signUpBackgroundImg from '../../assets/sign-up-background.png';\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n\r\n  display: flex;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 100%;\r\n  max-width: 700px;\r\n`;\r\n\r\nconst appearFromRight = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(50px)\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0)\r\n  }\r\n`;\r\n\r\nexport const AnimationContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  animation: ${appearFromRight} 1s;\r\n\r\n  form {\r\n    margin: 10px 0;\r\n    width: 340px;\r\n    text-align: center;\r\n\r\n    h1 {\r\n      margin-bottom: 24px;\r\n    }\r\n  }\r\n\r\n  > a {\r\n    color: #ff9000;\r\n    display: block;\r\n    text-decoration: none;\r\n    transition: color 0.3s;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    svg {\r\n      margin-right: 16px;\r\n    }\r\n\r\n    &:hover {\r\n      color: ${shade(0.2, '#ff9000')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  flex: 1;\r\n  background: url(${signUpBackgroundImg}) no-repeat center;\r\n  background-size: cover;\r\n`;\r\n","import React, { useCallback, useRef } from 'react';\r\nimport {\r\n  FiArrowLeft,\r\n  FiMail,\r\n  FiUser,\r\n  FiLock,\r\n  FiBriefcase,\r\n  FiClock,\r\n} from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\nimport getValidationErrors from '../../utils/getValidationErrors';\r\n\r\nimport Input from '../../components/Input';\r\nimport Select from '../../components/Select';\r\nimport Button from '../../components/Button';\r\n\r\nimport { useToast } from '../../hooks/toast';\r\n\r\nimport { Container, Content, AnimationContainer, Background } from './styles';\r\n\r\nimport logoImg from '../../assets/logo.svg';\r\n\r\ninterface SignUpFormData {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  roles: string[];\r\n  tipo_fornecedor: string;\r\n  avatar_url: string;\r\n}\r\n\r\nconst SignUp: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null);\r\n  const { addToast } = useToast();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: SignUpFormData) => {\r\n      try {\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          name: Yup.string().required('Nome é obrigatório'),\r\n          email: Yup.string()\r\n            .required('E-mail é obrigatório')\r\n            .email('Digite um e-mail válido'),\r\n          password: Yup.string().min(6, 'No mínimo 6 dígitos'),\r\n        });\r\n        data.roles = ['fornecedor'];\r\n        data.avatar_url =\r\n          'https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png';\r\n\r\n        await schema.validate(data, { abortEarly: false });\r\n\r\n        await api.post('api/auth/cadastrar', data);\r\n\r\n        history.push('/');\r\n\r\n        addToast({\r\n          type: 'success',\r\n          title: 'Cadastro realizado!',\r\n          description: 'Você já pode fazer seu logon no GoBarber!',\r\n        });\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n\r\n          formRef.current?.setErrors(errors);\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro na cadastro',\r\n          description: 'Ocorreu um error ao fazer cadastro, tente novamente.',\r\n        });\r\n      }\r\n    },\r\n    [addToast, history],\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Background />\r\n      <Content>\r\n        <AnimationContainer>\r\n          <img src={logoImg} style={{ width: '6em' }} alt=\"GoBarber\" />\r\n\r\n          <Form ref={formRef} onSubmit={handleSubmit}>\r\n            <h1>Faça seu cadastro</h1>\r\n\r\n            <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\r\n\r\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\r\n\r\n            <Select name=\"servico\" icon={FiBriefcase}>\r\n              <option value=\"\" selected disabled hidden>\r\n                Selecione a área de atuação\r\n              </option>\r\n              <option value=\"1\">Médico</option>\r\n              <option value=\"2\">Nutricionista</option>\r\n              <option value=\"3\">Barbeiro</option>\r\n            </Select>\r\n\r\n            <Input\r\n              name=\"password\"\r\n              icon={FiLock}\r\n              type=\"password\"\r\n              placeholder=\"Senha\"\r\n            />\r\n\r\n            <Button type=\"submit\">Cadastrar</Button>\r\n          </Form>\r\n\r\n          <Link to=\"/\">\r\n            <FiArrowLeft />\r\n            Voltar para logon\r\n          </Link>\r\n        </AnimationContainer>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import styled from 'styled-components';\r\nimport { shade } from 'polished';\r\n\r\nexport const Container = styled.div``;\r\n\r\nexport const Header = styled.header`\r\n  padding: 32px 0;\r\n  background: #28262e;\r\n`;\r\n\r\nexport const HeaderContent = styled.div`\r\n  max-width: 1120px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  > img {\r\n    height: 100px;\r\n  }\r\n\r\n  button {\r\n    margin-left: auto;\r\n    background: none;\r\n    border: none;\r\n\r\n    svg {\r\n      color: #999591;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const HeaderProfile = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 80px;\r\n\r\n  img {\r\n    width: 80px;\r\n    height: 80px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 16px;\r\n    line-height: 24px;\r\n\r\n    span {\r\n      color: #f4ede8;\r\n    }\r\n\r\n    a {\r\n      text-decoration: none;\r\n      color: #d02e36;\r\n\r\n      transition: opacity 0.3s;\r\n      &:hover {\r\n        opacity: 0.8;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.main`\r\n  max-width: 1120px;\r\n  margin: 64px auto;\r\n  display: flex;\r\n`;\r\n\r\nexport const Schedule = styled.div`\r\n  flex: 1;\r\n  margin-right: 120px;\r\n\r\n  h1 {\r\n    font-size: 36px;\r\n  }\r\n\r\n  p {\r\n    margin-top: 8px;\r\n    color: #d02e36;\r\n    display: flex;\r\n    align-items: center;\r\n    font-weight: 500;\r\n\r\n    span {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n\r\n    span + span::before {\r\n      content: '';\r\n      width: 1px;\r\n      height: 12px;\r\n      background: #d02e36;\r\n      margin: 0 8px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Agendar = styled.div`\r\n  max-width: 7.5em;\r\n`;\r\n\r\nexport const NextAppointment = styled.div`\r\n  margin-top: 2em;\r\n\r\n  > strong {\r\n    color: #999591;\r\n    font-size: 20px;\r\n    font-weight: normal;\r\n  }\r\n\r\n  div {\r\n    background: #3e3b47;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 16px 24px;\r\n    border-radius: 10px;\r\n    margin-top: 24px;\r\n    position: relative;\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      height: 80%;\r\n      width: 2px;\r\n      border-radius: 0 10px 10px 0;\r\n      left: 0;\r\n      top: 10%;\r\n      background: #d02e36;\r\n    }\r\n\r\n    img {\r\n      width: 80px;\r\n      height: 80px;\r\n      border-radius: 50%;\r\n    }\r\n\r\n    strong {\r\n      margin-left: 24px;\r\n      font-size: 24px;\r\n      color: #f4ede8;\r\n    }\r\n\r\n    span {\r\n      margin-left: auto;\r\n      display: flex;\r\n      align-items: center;\r\n      color: #999591;\r\n\r\n      svg {\r\n        color: #d02e36;\r\n        margin-right: 8px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Section = styled.section`\r\n  margin-top: 48px;\r\n\r\n  > strong {\r\n    color: #999591;\r\n    font-size: 20px;\r\n    line-height: 26px;\r\n    border-bottom: 1px solid #3e3b47;\r\n    display: block;\r\n    padding-bottom: 16px;\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  > p {\r\n    color: #999591;\r\n  }\r\n`;\r\n\r\nexport const Appointment = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & + div {\r\n    margin-top: 16px;\r\n  }\r\n\r\n  span {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    color: #f4ede8;\r\n    width: 72px;\r\n\r\n    svg {\r\n      color: #d02e36;\r\n      margin-right: 8px;\r\n    }\r\n  }\r\n\r\n  div {\r\n    flex: 1;\r\n    background: #3e3b47;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 16px 24px;\r\n    border-radius: 10px;\r\n    margin-left: 24px;\r\n\r\n    img {\r\n      width: 80px;\r\n      height: 80px;\r\n      border-radius: 50%;\r\n    }\r\n\r\n    strong {\r\n      margin-left: 24px;\r\n      font-size: 20px;\r\n      color: #f4ede8;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Calendar = styled.aside`\r\n  width: 380px;\r\n\r\n  .DayPicker {\r\n    background: #28262e;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .DayPicker-wrapper {\r\n    padding-bottom: 0;\r\n  }\r\n\r\n  .DayPicker,\r\n  .DayPicker-Month {\r\n    width: 100%;\r\n  }\r\n\r\n  .DayPicker-Month {\r\n    border-collapse: separate;\r\n    border-spacing: 8px;\r\n    margin: 16px;\r\n  }\r\n\r\n  .DayPicker-Day {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n\r\n  .DayPicker-Day--available:not(.DayPicker-Day--outside) {\r\n    background: #3e3b47;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n  }\r\n\r\n  .DayPicker:not(.DayPicker--interactionDisabled)\r\n    .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {\r\n    background: ${shade(0.2, '#3e3b47')};\r\n  }\r\n\r\n  .DayPicker-Day--today {\r\n    font-weight: normal;\r\n  }\r\n\r\n  .DayPicker-Day--disabled {\r\n    color: #666360 !important;\r\n    background: transparent !important;\r\n  }\r\n\r\n  .DayPicker-Day--selected {\r\n    background: #d02e36 !important;\r\n    border-radius: 10px;\r\n    color: #232129 !important;\r\n  }\r\n`;\r\n","import React, {\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n} from 'react';\r\nimport { isToday, format, parseISO, isAfter } from 'date-fns';\r\nimport ptBR from 'date-fns/locale/pt-BR';\r\nimport DayPicker, { DayModifiers } from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\nimport {\r\n  FiPower,\r\n  FiClock,\r\n  FiXCircle,\r\n  FiUser,\r\n  FiCalendar,\r\n  FiEdit\r\n} from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport { useToast } from '../../hooks/toast';\r\nimport * as S from './styles';\r\n\r\nimport logoImg from '../../assets/logo.svg';\r\nimport { useAuth } from '../../hooks/auth';\r\nimport api from '../../services/api';\r\nimport Button from '../../components/Button';\r\nimport Input from '../../components/Input';\r\nimport getValidationErrors from '../../utils/getValidationErrors';\r\n\r\ninterface MonthAvailabilityItem {\r\n  day: number;\r\n  available: boolean;\r\n}\r\n\r\ninterface Appointment {\r\n  id: string;\r\n  date: string;\r\n  hourFormatted: string;\r\n  user: {\r\n    name: string;\r\n    avatar_url: string;\r\n  };\r\n}\r\n\r\ninterface AppointmentFormData {\r\n  nome: string;\r\n  data_agendamento: Date;\r\n  hora_agendamento: Date;\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const { signOut, user } = useAuth();\r\n  const { addToast } = useToast();\r\n  const history = useHistory();\r\n  const formRef = useRef<FormHandles>(null);\r\n  const handleSubmit = useCallback(\r\n    async (data: AppointmentFormData) => {\r\n      try {\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          nome: Yup.string().required('Nome é obrigatório'),\r\n          data_agendamento: Yup.date(),\r\n        });\r\n\r\n        await schema.validate(data, { abortEarly: false });\r\n\r\n        const d = new Date(data.data_agendamento);\r\n        const dia = d.getUTCDate();\r\n        const mes = d.getUTCMonth();\r\n        const ano = d.getUTCFullYear();\r\n        const hora = data.hora_agendamento.toString().split(':');\r\n        const dataAgendamento = new Date(\r\n          Date.UTC(ano, mes, dia, parseInt(hora[0]), parseInt(hora[1])),\r\n        );\r\n        await api.post('/appointments/new', {\r\n          date: dataAgendamento,\r\n          fornecedor_id: user.id,\r\n          nome: data.nome,\r\n        });\r\n        getAppointments();\r\n        setisOpenAppointment(false);\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n          formRef.current?.setErrors(errors);\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro no agendamento',\r\n          description: 'Já existe outro cliente agendado neste periodo!',\r\n        });\r\n      }\r\n    },\r\n    [addToast],\r\n  );\r\n\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n  const [avaliacao, setAvaliacao] = useState(0);\r\n  const [monthAvailability, setMonthAvailability] = useState<\r\n    MonthAvailabilityItem[]\r\n  >([]);\r\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\r\n\r\n  const [isOpenAppointment, setisOpenAppointment] = useState(false);\r\n\r\n  const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\r\n    if (modifiers.available && !modifiers.disabled) {\r\n      setSelectedDate(day);\r\n    }\r\n  }, []);\r\n\r\n  const handleMonthChange = useCallback((month: Date) => {\r\n    setCurrentMonth(month);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const tempo = new Date();\r\n    const validade = new Date(user.validade);\r\n    setIsValid(tempo < validade);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   api\r\n  //     .get(`/providers/${user.id}/month-availability`, {\r\n  //       params: {\r\n  //         year: currentMonth.getFullYear(),\r\n  //         month: currentMonth.getMonth() + 1,\r\n  //       },\r\n  //     })\r\n  //     .then(response => setMonthAvailability(response.data));\r\n  // }, [currentMonth, user.id]);\r\n\r\n  const getAppointments = () => {\r\n    api\r\n      .get<Appointment[]>('/appointments/me', {\r\n        params: {\r\n          year: selectedDate.getFullYear(),\r\n          month: selectedDate.getMonth() + 1,\r\n          day: selectedDate.getDate(),\r\n        },\r\n      })\r\n      .then(response => {\r\n        const appointmentsFormatted = response.data.map(appointment => ({\r\n          ...appointment,\r\n          hourFormatted: format(\r\n            parseISO(appointment.date.replace('.000Z', '')),\r\n            'HH:mm',\r\n          ),\r\n        }));\r\n\r\n        setAppointments(appointmentsFormatted);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get<Appointment[]>('/appointments/me', {\r\n        params: {\r\n          year: selectedDate.getFullYear(),\r\n          month: selectedDate.getMonth() + 1,\r\n          day: selectedDate.getDate(),\r\n        },\r\n      })\r\n      .then(response => {\r\n        const appointmentsFormatted = response.data.map(appointment => ({\r\n          ...appointment,\r\n          hourFormatted: format(\r\n            parseISO(appointment.date.replace('.000Z', '')),\r\n            'HH:mm',\r\n          ),\r\n        }));\r\n\r\n        setAppointments(appointmentsFormatted);\r\n      });\r\n  }, [selectedDate]);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get('/providers/mediaAvaliacao/' + user.id)\r\n      .then(response => {\r\n        if(isNaN(response.data)){\r\n          setAvaliacao(0);\r\n        } else {\r\n          setAvaliacao(response.data);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get('/providers/disponibilidade')\r\n      .then(response => {\r\n        if (!response.data.disponivel)\r\n          history.push('/atualizar-disponibilidade');\r\n      })\r\n      .catch(err => {\r\n        localStorage.removeItem('@GoBarber:token');\r\n        localStorage.removeItem('@GoBarber:user');\r\n        history.push('/');\r\n      });\r\n  });\r\n\r\n  const disableDays = useMemo(() => {\r\n    return monthAvailability\r\n      .filter(monthDay => monthDay.available === false)\r\n      .map(monthDay => {\r\n        const year = currentMonth.getFullYear();\r\n        const month = currentMonth.getMonth();\r\n\r\n        return new Date(year, month, monthDay.day);\r\n      });\r\n  }, [currentMonth, monthAvailability]);\r\n\r\n  const selectedDateAsText = useMemo(() => {\r\n    return format(selectedDate, \"'Dia' dd 'de' MMMM\", { locale: ptBR });\r\n  }, [selectedDate]);\r\n\r\n  const selectedWeekDay = useMemo(() => {\r\n    return format(selectedDate, 'cccc', { locale: ptBR });\r\n  }, [selectedDate]);\r\n\r\n  const morningAppointments = useMemo(() => {\r\n    return appointments.filter(appointment => {\r\n      return parseISO(appointment.date.replace('.000Z', '')).getHours() < 12;\r\n    });\r\n  }, [appointments]);\r\n\r\n  const afternoonAppointments = useMemo(() => {\r\n    return appointments.filter(appointment => {\r\n      return parseISO(appointment.date.replace('.000Z', '')).getHours() >= 12;\r\n    });\r\n  }, [appointments]);\r\n\r\n  const nextAppointment = useMemo(() => {\r\n    return appointments.find(appointment =>\r\n      isAfter(parseISO(appointment.date), new Date()),\r\n    );\r\n  }, [appointments]);\r\n\r\n  const deleteAgendamento = async (id: any) => {\r\n    try {\r\n      await api.delete(`/appointments/cancel?id=${id}`);\r\n      getAppointments();\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.Header>\r\n        <S.HeaderContent>\r\n          <img src={logoImg} alt=\"Logo GoBarber\" />\r\n          <S.HeaderProfile>\r\n            <img\r\n              src={\r\n                user.avatar_url ||\r\n                'https://www.esfri.eu/sites/default/files/profileImage_nonGender-220.png'\r\n              }\r\n              alt={user.name}\r\n            />\r\n\r\n            <div>\r\n              <span>Bem-vindo,</span>\r\n              <Link to=\"/profile\">\r\n                <strong>{user.name}</strong>\r\n              </Link>\r\n              {user.descricao ? <Link to=\"/descricao\">\r\n                <span> {user.descricao}</span>\r\n              </Link> : <Link to=\"/descricao\">\r\n                <span> <FiEdit  /> Definir descrição</span>\r\n              </Link>}\r\n              <span>Avaliação: {avaliacao}/5.0</span>\r\n            </div>\r\n          </S.HeaderProfile>\r\n          <button type=\"button\" onClick={signOut}>\r\n            <FiPower size={20} />\r\n          </button>\r\n        </S.HeaderContent>\r\n        \r\n      </S.Header>\r\n      {user.roles && user.roles.includes('ROLE_ADMIN') && <S.Content>\r\n        <Link to=\"/clientes\" style={{ minWidth: '100%' }}>\r\n          <Button>\r\n            Listagem de clientes \r\n          </Button>\r\n        </Link>\r\n      </S.Content>}        \r\n      \r\n\r\n      {user.roles && !user.roles.includes('ROLE_ADMIN') && <S.Content>\r\n        <S.Schedule>\r\n          <h1>Horários agendados</h1>\r\n          <p>\r\n            {isToday(selectedDate) && <span>Hoje</span>}\r\n            <span>{selectedDateAsText}</span>\r\n            <span>\r\n              {selectedWeekDay.includes('domingo') ||\r\n              selectedWeekDay.includes('sábado')\r\n                ? `${selectedWeekDay}`\r\n                : `${selectedWeekDay}-feira`}\r\n            </span>\r\n          </p>\r\n\r\n          {!isValid && (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              Sua conta está desativada, para ativar entre em contato com (32)\r\n              98803-5580.\r\n            </div>\r\n          )}\r\n\r\n          {!isOpenAppointment && isValid ? (\r\n            <S.Agendar>\r\n              <Button\r\n                style={{ width: '45.5vw' }}\r\n                onClick={() => setisOpenAppointment(!isOpenAppointment)}\r\n              >\r\n                <FiClock size={18} /> Agendar\r\n              </Button>\r\n            </S.Agendar>\r\n          ) : null}\r\n\r\n          {isOpenAppointment && (\r\n            <Form\r\n              style={{ marginTop: 20 }}\r\n              ref={formRef}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <Input name=\"nome\" icon={FiUser} placeholder=\"Nome\" />\r\n              <Input\r\n                type=\"date\"\r\n                name=\"data_agendamento\"\r\n                icon={FiCalendar}\r\n                placeholder=\"Data de Agendamento\"\r\n              />\r\n              <Input\r\n                type=\"time\"\r\n                name=\"hora_agendamento\"\r\n                icon={FiCalendar}\r\n                placeholder=\"Hora de Agendamento\"\r\n              />\r\n              <div style={{ display: 'flex', gap: 10 }}>\r\n                <Button onClick={() => setisOpenAppointment(false)}>\r\n                  Cancelar\r\n                </Button>\r\n                <Button type=\"submit\">Agendar</Button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n\r\n          {isToday(selectedDate) && nextAppointment && (\r\n            <S.NextAppointment>\r\n              <strong>Atendimento a seguir</strong>\r\n              <div>\r\n                <img\r\n                  src={\r\n                    nextAppointment.user.avatar_url ||\r\n                    'https://api.adorable.io/avatars/80/abott@adorable.io.png'\r\n                  }\r\n                  alt={nextAppointment.user.name}\r\n                />\r\n\r\n                <strong>{nextAppointment.user.name}</strong>\r\n                <span>\r\n                  <FiClock size={24} />\r\n                  {nextAppointment.hourFormatted}\r\n                </span>\r\n              </div>\r\n            </S.NextAppointment>\r\n          )}\r\n\r\n          <S.Section>\r\n            <strong>Manhã</strong>\r\n\r\n            {morningAppointments.length === 0 && (\r\n              <p>Nenhum agendamento neste período</p>\r\n            )}\r\n\r\n            {morningAppointments.map(appointment => (\r\n              <S.Appointment key={appointment.id}>\r\n                <span>\r\n                  <FiClock size={20} />\r\n                  {appointment.hourFormatted}\r\n                </span>\r\n\r\n                <div>\r\n                  <img\r\n                    src={\r\n                      appointment.user.avatar_url ||\r\n                      'https://api.adorable.io/avatars/56/abott@adorable.io.png'\r\n                    }\r\n                    alt={appointment.user.name}\r\n                  />\r\n\r\n                  <strong style={{ width: '100%' }}>\r\n                    {appointment.user.name}\r\n                  </strong>\r\n                  <Button\r\n                    style={{\r\n                      width: 50,\r\n                      height: 50,\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                    }}\r\n                    onClick={() => deleteAgendamento(appointment.id)}\r\n                  >\r\n                    <FiXCircle size={20} />\r\n                  </Button>\r\n                </div>\r\n              </S.Appointment>\r\n            ))}\r\n          </S.Section>\r\n          <S.Section>\r\n            <strong>Tarde</strong>\r\n\r\n            {afternoonAppointments.length === 0 && (\r\n              <p>Nenhum agendamento neste período</p>\r\n            )}\r\n\r\n            {afternoonAppointments.map(appointment => (\r\n              <S.Appointment key={appointment.id}>\r\n                <span>\r\n                  <FiClock size={20} />\r\n                  {appointment.hourFormatted}\r\n                </span>\r\n\r\n                <div>\r\n                  <img\r\n                    src={\r\n                      appointment.user.avatar_url ||\r\n                      'https://api.adorable.io/avatars/56/abott@adorable.io.png'\r\n                    }\r\n                    alt={appointment.user.name}\r\n                  />\r\n\r\n                  <strong style={{ width: '100%' }}>\r\n                    {appointment.user.name}\r\n                  </strong>\r\n                  <Button\r\n                    style={{\r\n                      width: 50,\r\n                      height: 50,\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                    }}\r\n                    onClick={() => deleteAgendamento(appointment.id)}\r\n                  >\r\n                    <FiXCircle size={20} />\r\n                  </Button>\r\n                </div>\r\n              </S.Appointment>\r\n            ))}\r\n          </S.Section>\r\n        </S.Schedule>\r\n        <S.Calendar>\r\n          <DayPicker\r\n            weekdaysShort={['D', 'S', 'T', 'Q', 'Q', 'S', 'S']}\r\n            fromMonth={new Date()}\r\n            disabledDays={[{ daysOfWeek: [0, 6] }, ...disableDays]}\r\n            modifiers={{\r\n              available: { daysOfWeek: [1, 2, 3, 4, 5] },\r\n            }}\r\n            onMonthChange={handleMonthChange}\r\n            selectedDays={selectedDate}\r\n            onDayClick={handleDateChange}\r\n            months={[\r\n              'Janeiro',\r\n              'Fevereiro',\r\n              'Março',\r\n              'Abril',\r\n              'Maio',\r\n              'Junho',\r\n              'Julho',\r\n              'Agosto',\r\n              'Setembro',\r\n              'Outubro',\r\n              'Novembro',\r\n              'Dezembro',\r\n            ]}\r\n          />\r\n        </S.Calendar>\r\n        \r\n      </S.Content>}\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { shade } from 'polished';\r\n\r\nimport signInBackgroundImg from '../../assets/sign-in-background.png';\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n\r\n  display: flex;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 100%;\r\n  max-width: 700px;\r\n`;\r\n\r\nconst appearFromLeft = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(-50px)\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0)\r\n  }\r\n`;\r\n\r\nexport const AnimationContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  animation: ${appearFromLeft} 1s;\r\n\r\n  form {\r\n    margin: 80px 0;\r\n    width: 340px;\r\n    text-align: center;\r\n\r\n    h1 {\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    a {\r\n      color: #f4ede8;\r\n      display: block;\r\n      margin-top: 24px;\r\n      text-decoration: none;\r\n      transition: color 0.3s;\r\n\r\n      &:hover {\r\n        color: ${shade(0.2, '#f4ede8')};\r\n      }\r\n    }\r\n  }\r\n\r\n  > a {\r\n    color: #ff9000;\r\n    display: block;\r\n    margin-top: 24px;\r\n    text-decoration: none;\r\n    transition: color 0.3s;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    svg {\r\n      margin-right: 16px;\r\n    }\r\n\r\n    &:hover {\r\n      color: ${shade(0.2, '#ff9000')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  flex: 1;\r\n  background: url(${signInBackgroundImg}) no-repeat center;\r\n  background-size: cover;\r\n`;\r\n","import React, { useRef, useCallback, useState } from 'react';\r\nimport { FiLogIn, FiMail } from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useToast } from '../../hooks/toast';\r\nimport getValidationErrors from '../../utils/getValidationErrors';\r\n\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\nimport { Container, Content, AnimationContainer, Background } from './styles';\r\n\r\nimport logoImg from '../../assets/logo.svg';\r\nimport api from '../../services/api';\r\n\r\ninterface ForgotPasswordFormData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst ForgotPassword: React.FC = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const formRef = useRef<FormHandles>(null);\r\n  // const history = useHistory();\r\n\r\n  const { addToast } = useToast();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: ForgotPasswordFormData) => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          email: Yup.string()\r\n            .required('E-mail é obrigatório')\r\n            .email('Digite um e-mail válido'),\r\n        });\r\n\r\n        await schema.validate(data, { abortEarly: false });\r\n\r\n        await api.post('/password/forgot', {\r\n          email: data.email,\r\n        });\r\n\r\n        addToast({\r\n          type: 'success',\r\n          title: 'E-mail de recuperação enviado',\r\n          description:\r\n            'Enviamos um e-mail para confirmar a recuperação de senha, cheque sua caixa de entrada.',\r\n        });\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n\r\n          formRef.current?.setErrors(errors);\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro na recuperação de senha',\r\n          description:\r\n            'Ocorreu um error ao tentar realizar a recuperação de senha',\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [addToast],\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <AnimationContainer>\r\n          <img src={logoImg} alt=\"GoBarber\" />\r\n\r\n          <Form ref={formRef} onSubmit={handleSubmit}>\r\n            <h1>Recuperar senha</h1>\r\n\r\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\r\n\r\n            <Button loading={loading} type=\"submit\">\r\n              Recuperar\r\n            </Button>\r\n          </Form>\r\n\r\n          <Link to=\"/\">\r\n            <FiLogIn />\r\n            Voltar ao login\r\n          </Link>\r\n        </AnimationContainer>\r\n      </Content>\r\n      <Background />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { shade } from 'polished';\r\n\r\nimport signInBackgroundImg from '../../assets/sign-in-background.png';\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n\r\n  display: flex;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 100%;\r\n  max-width: 700px;\r\n`;\r\n\r\nconst appearFromLeft = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(-50px)\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0)\r\n  }\r\n`;\r\n\r\nexport const AnimationContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  animation: ${appearFromLeft} 1s;\r\n\r\n  form {\r\n    margin: 80px 0;\r\n    width: 340px;\r\n    text-align: center;\r\n\r\n    h1 {\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    a {\r\n      color: #f4ede8;\r\n      display: block;\r\n      margin-top: 24px;\r\n      text-decoration: none;\r\n      transition: color 0.3s;\r\n\r\n      &:hover {\r\n        color: ${shade(0.2, '#f4ede8')};\r\n      }\r\n    }\r\n  }\r\n\r\n  > a {\r\n    color: #ff9000;\r\n    display: block;\r\n    margin-top: 24px;\r\n    text-decoration: none;\r\n    transition: color 0.3s;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    svg {\r\n      margin-right: 16px;\r\n    }\r\n\r\n    &:hover {\r\n      color: ${shade(0.2, '#ff9000')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  flex: 1;\r\n  background: url(${signInBackgroundImg}) no-repeat center;\r\n  background-size: cover;\r\n`;\r\n","import React, { useRef, useCallback } from 'react';\r\nimport { FiLock } from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport { useToast } from '../../hooks/toast';\r\nimport getValidationErrors from '../../utils/getValidationErrors';\r\n\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\nimport { Container, Content, AnimationContainer, Background } from './styles';\r\n\r\nimport logoImg from '../../assets/logo.svg';\r\nimport api from '../../services/api';\r\n\r\ninterface ResetPasswordFormData {\r\n  password: string;\r\n  password_confirmation: string;\r\n}\r\n\r\nconst ResetPassword: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const { addToast } = useToast();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: ResetPasswordFormData) => {\r\n      try {\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          password: Yup.string().required('Senha é obrigatória'),\r\n          password_confirmation: Yup.string().oneOf(\r\n            [Yup.ref('password'), null],\r\n            'Confirmação incorreta',\r\n          ),\r\n        });\r\n\r\n        await schema.validate(data, { abortEarly: false });\r\n\r\n        const { password, password_confirmation } = data;\r\n        const token = new URLSearchParams(location.search).get('token');\r\n\r\n        if (!token) {\r\n          throw new Error();\r\n        }\r\n\r\n        await api.post('/password/reset', {\r\n          password,\r\n          password_confirmation,\r\n          token,\r\n        });\r\n\r\n        history.push('/');\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n\r\n          formRef.current?.setErrors(errors);\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro ao resetar senha',\r\n          description:\r\n            'Ocorreu um error ao resetar sua senha, tente novamente.',\r\n        });\r\n      }\r\n    },\r\n    [addToast, history, location.search],\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <AnimationContainer>\r\n          <img src={logoImg} alt=\"GoBarber\" />\r\n\r\n          <Form ref={formRef} onSubmit={handleSubmit}>\r\n            <h1>Resetar senha</h1>\r\n\r\n            <Input\r\n              name=\"password\"\r\n              icon={FiLock}\r\n              type=\"password\"\r\n              placeholder=\"Nova senha\"\r\n            />\r\n\r\n            <Input\r\n              name=\"password_confirmation\"\r\n              icon={FiLock}\r\n              type=\"password\"\r\n              placeholder=\"Confirmação da senha\"\r\n            />\r\n\r\n            <Button type=\"submit\">Alterar senha</Button>\r\n          </Form>\r\n        </AnimationContainer>\r\n      </Content>\r\n      <Background />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import styled from 'styled-components';\r\nimport { shade, lighten } from 'polished';\r\n\r\nexport const Container = styled.div`\r\n  > header {\r\n    height: 100px;\r\n    background: #28262e;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    div {\r\n      width: 100%;\r\n      max-width: 1120px;\r\n      margin: 0 auto;\r\n\r\n      svg {\r\n        color: #999591;\r\n        transition: color 0.3s;\r\n      }\r\n\r\n      a:hover {\r\n        svg {\r\n          color: ${lighten(0.2, '#999591')};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: -176px auto 0;\r\n\r\n  width: 100%;\r\n\r\n  form {\r\n    margin: 90px 0;\r\n    width: 340px;\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    h1 {\r\n      margin-bottom: 24px;\r\n      font-size: 20px;\r\n      text-align: left;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AvatarInput = styled.div`\r\n  position: relative;\r\n\r\n  margin-bottom: 32px;\r\n  align-self: center;\r\n\r\n  img {\r\n    width: 140px;\r\n    height: 140px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  label {\r\n    position: absolute;\r\n    width: 48px;\r\n    height: 48px;\r\n    background: #d02e36;\r\n    border: none;\r\n    border-radius: 50%;\r\n    right: 0;\r\n    bottom: 0;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    transition: background-color 0.3s;\r\n    cursor: pointer;\r\n\r\n    input {\r\n      display: none;\r\n    }\r\n\r\n    &:hover {\r\n      background: ${shade(0.2, '#d02e20')};\r\n    }\r\n\r\n    svg {\r\n      color: #312e38;\r\n    }\r\n  }\r\n`;\r\n","export const getBase64 = file => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n};\r\n\r\nexport const ConvertToBase64 = async images => {\r\n  let data = [];\r\n  await images.reduce((promiseChain, element) => {\r\n    return promiseChain.then(\r\n      () =>\r\n        new Promise(resolve => {\r\n          getBase64(element).then(res => {\r\n            data.push(res);\r\n            resolve();\r\n          });\r\n        }),\r\n    );\r\n  }, Promise.resolve());\r\n  return data;\r\n};\r\n","import React, { useCallback, useRef, ChangeEvent } from 'react';\r\nimport { FiMail, FiUser, FiLock, FiCamera, FiArrowLeft } from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\nimport getValidationErrors from '../../utils/getValidationErrors';\r\n\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\n\r\nimport { useToast } from '../../hooks/toast';\r\n\r\nimport { Container, Content, AvatarInput } from './styles';\r\nimport { useAuth } from '../../hooks/auth';\r\nimport { ConvertToBase64, getBase64 } from '../../utils/getbase64';\r\n\r\ninterface ProfileFormData {\r\n  name: string;\r\n  email: string;\r\n  old_password: string;\r\n  password: string;\r\n  password_confirmation: string;\r\n}\r\n\r\nconst Profile: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null);\r\n  const { addToast } = useToast();\r\n  const history = useHistory();\r\n\r\n  const { user, updateUser, signOut } = useAuth();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: ProfileFormData) => {\r\n      try {\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          name: Yup.string().required('Nome é obrigatório'),\r\n          email: Yup.string()\r\n            .required('E-mail é obrigatório')\r\n            .email('Digite um e-mail válido'),\r\n          // old_password: Yup.string(),\r\n          // password: Yup.string().when('old_password', {\r\n          //   is: val => !!val.length,\r\n          //   then: Yup.string()\r\n          //     .min(6, 'No mínimo 6 dígitos')\r\n          //     .required('Campo obrigatório'),\r\n          //   otherwise: Yup.string(),\r\n          // }),\r\n          // password_confirmation: Yup.string()\r\n          //   .when('old_password', {\r\n          //     is: val => !!val.length,\r\n          //     then: Yup.string().required('Campo obrigatório'),\r\n          //     otherwise: Yup.string(),\r\n          //   })\r\n          //   .oneOf([Yup.ref('password'), null], 'Confirmação incorreta'),\r\n        });\r\n\r\n        await schema.validate(data, { abortEarly: false });\r\n\r\n        // const {\r\n        //   name,\r\n        //   email,\r\n        //   old_password,\r\n        //   password,\r\n        //   password_confirmation,\r\n        // } = data;\r\n\r\n        // const formData = {\r\n        //   name,\r\n        //   email,\r\n        //   ...(old_password\r\n        //     ? {\r\n        //         old_password,\r\n        //         password,\r\n        //         password_confirmation,\r\n        //       }\r\n        //     : {}),\r\n        // };\r\n\r\n        const {\r\n          name,\r\n          email\r\n        } = data;\r\n\r\n        const formData = {\r\n          name,\r\n          email\r\n        };\r\n\r\n        const response = await api.put('/providers/updateProfile', formData);\r\n\r\n        signOut();\r\n\r\n        history.push('/dashboard');\r\n\r\n        addToast({\r\n          type: 'success',\r\n          title: 'Perfil atualizado!',\r\n          description:\r\n            'Suas informações do perfil foram atualizadas com sucesso!',\r\n        });\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n\r\n          formRef.current?.setErrors(errors);\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro na atualização',\r\n          description:\r\n            'Ocorreu um error ao atualizar o perfil, tente novamente.',\r\n        });\r\n      }\r\n    },\r\n    [addToast, history, updateUser],\r\n  );\r\n\r\n  const handleAvatarChange = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => {\r\n      if (e.target.files) {\r\n        getBase64(e.target.files[0]).then(res => {\r\n          api.patch('/providers/avatar', { img: res }).then(response => {\r\n            console.log(response);\r\n            updateUser(response.data);\r\n          });\r\n          console.log(res);\r\n          addToast({\r\n            type: 'success',\r\n            title: 'Avatar atualizado',\r\n          });\r\n        });\r\n        // api.patch('/providers/avatar', data).then(response => {\r\n        //   updateUser(response.data);\r\n        // });\r\n      }\r\n    },\r\n    [addToast, updateUser],\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <header>\r\n        <div>\r\n          <Link to=\"/dashboard\">\r\n            <FiArrowLeft size={32} />\r\n          </Link>\r\n        </div>\r\n      </header>\r\n      <Content>\r\n        <Form\r\n          ref={formRef}\r\n          initialData={{ name: user.name, email: user.email }}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <AvatarInput>\r\n            <img\r\n              src={\r\n                user.avatar_url ||\r\n                'https://api.adorable.io/avatars/186/abott@adorable.io.png'\r\n              }\r\n              alt={user.name}\r\n            />\r\n            <label htmlFor=\"avatar\">\r\n              <FiCamera size={20} />\r\n              <input\r\n                data-testid=\"input-file\"\r\n                type=\"file\"\r\n                id=\"avatar\"\r\n                onChange={handleAvatarChange}\r\n              />\r\n            </label>\r\n          </AvatarInput>\r\n\r\n          <h1>Meu Perfil</h1>\r\n\r\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\r\n\r\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\r\n\r\n          {/* <Input\r\n            containerStyle={{ marginTop: 24 }}\r\n            name=\"old_password\"\r\n            icon={FiLock}\r\n            type=\"password\"\r\n            placeholder=\"Senha atual\"\r\n          />\r\n          <Input\r\n            name=\"password\"\r\n            icon={FiLock}\r\n            type=\"password\"\r\n            placeholder=\"Nova senha\"\r\n          />\r\n          <Input\r\n            name=\"password_confirmation\"\r\n            icon={FiLock}\r\n            type=\"password\"\r\n            placeholder=\"Confirmar senha\"\r\n          /> */}\r\n\r\n          <Button type=\"submit\">Confirmar mudanças</Button>\r\n        </Form>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { shade } from 'polished';\r\n\r\nimport signUpBackgroundImg from '../../assets/sign-up-background.png';\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n\r\n  display: flex;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 100%;\r\n  max-width: 700px;\r\n`;\r\n\r\nconst appearFromRight = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(50px)\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0)\r\n  }\r\n`;\r\n\r\nexport const AnimationContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  animation: ${appearFromRight} 1s;\r\n\r\n  form {\r\n    margin: 10px 0;\r\n    width: 360px;\r\n    text-align: center;\r\n\r\n    h1 {\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    div {\r\n      margin: 16px 0px 8px 0px;\r\n      text-align: left;\r\n    }\r\n  }\r\n\r\n  > a {\r\n    color: #ff9000;\r\n    display: block;\r\n    text-decoration: none;\r\n    transition: color 0.3s;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    svg {\r\n      margin-right: 16px;\r\n    }\r\n\r\n    &:hover {\r\n      color: ${shade(0.2, '#ff9000')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  flex: 1;\r\n  background: url(${signUpBackgroundImg}) no-repeat center;\r\n  background-size: cover;\r\n`;\r\n","import React, { useCallback, useRef } from 'react';\r\nimport { FiClock } from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\nimport getValidationErrors from '../../utils/getValidationErrors';\r\n\r\nimport Input from '../../components/Input';\r\nimport Select from '../../components/Select';\r\nimport Button from '../../components/Button';\r\n\r\nimport { useToast } from '../../hooks/toast';\r\n\r\nimport { Container, Content, AnimationContainer, Background } from './styles';\r\n\r\nimport logoImg from '../../assets/logo.svg';\r\n\r\ninterface AvailabilityFormData {\r\n  inicio: Date;\r\n  final: Date;\r\n  duracao: Number;\r\n}\r\n\r\nconst SignUp: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null);\r\n  const { addToast } = useToast();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: AvailabilityFormData) => {\r\n      try {\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          inicio: Yup.string().required('Início é obrigatório'),\r\n          final: Yup.string().required('Final é obrigatório'),\r\n          duracao: Yup.string().required('Duração é obrigatório'),\r\n        });\r\n        await schema.validate(data, { abortEarly: false });\r\n\r\n        await api.post('/providers/disponibilidade', data);\r\n\r\n        history.push('/dashboard');\r\n\r\n        addToast({\r\n          type: 'success',\r\n          title: 'Horário atualizado!',\r\n          description: 'Você já pode fazer seu logon no Agende Fácil!',\r\n        });\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n\r\n          formRef.current?.setErrors(errors);\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro na definição dos dados',\r\n          description:\r\n            'Ocorreu um error ao atualizar seu horário de atendimento, tente novamente.',\r\n        });\r\n      }\r\n    },\r\n    [addToast, history],\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Background />\r\n      <Content>\r\n        <AnimationContainer>\r\n          <img src={logoImg} style={{ width: '6em' }} alt=\"GoBarber\" />\r\n\r\n          <Form ref={formRef} onSubmit={handleSubmit}>\r\n            <h1>Horário de atendimento</h1>\r\n            <div>\r\n              <label htmlFor=\"inicio\">Início</label>\r\n              <Input type=\"time\" id=\"inicio\" name=\"inicio\" icon={FiClock} />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"final\">Final</label>\r\n              <Input type=\"time\" id=\"final\" name=\"final\" icon={FiClock} />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"duracao\">Duração média</label>\r\n              <Select\r\n                name=\"duracao\"\r\n                id=\"duracao\"\r\n                icon={FiClock}\r\n                defaultValue={0}\r\n              >\r\n                <option value=\"0\" disabled hidden>\r\n                  --\r\n                </option>\r\n                <option value=\"15\">15 Minutos</option>\r\n                <option value=\"30\">30 Minutos</option>\r\n                <option value=\"45\">45 Minutos</option>\r\n                <option value=\"60\">1 Hora</option>\r\n                <option value=\"75\">1 Hora e 15 Minutos</option>\r\n                <option value=\"90\">1 Hora e 30 Minutos</option>\r\n                <option value=\"105\">1 Hora e 45 Minutos</option>\r\n                <option value=\"120\">2 Horas</option>\r\n              </Select>\r\n            </div>\r\n\r\n            <Button type=\"submit\">Continuar</Button>\r\n          </Form>\r\n        </AnimationContainer>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport {\r\n  RouteProps as ReactDOMRouteProps,\r\n  Route as ReactDOMRoute,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\n// import { Container } from './styles';\r\nimport { useAuth } from '../hooks/auth';\r\n\r\ninterface RouteProps extends ReactDOMRouteProps {\r\n  isPrivate?: boolean;\r\n  component: React.ComponentType;\r\n}\r\n\r\nconst Route: React.FC<RouteProps> = ({\r\n  isPrivate = false,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <ReactDOMRoute\r\n      {...rest}\r\n      render={({ location }) => {\r\n        return isPrivate === !!user ? (\r\n          <Component />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: isPrivate ? '/' : '/dashboard',\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Route;\r\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.div``;\n\nexport const Header = styled.header`\n  padding: 32px 0;\n  background: #28262e;\n`;\n\nexport const HeaderContent = styled.div`\n  max-width: 1120px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n\n  > img {\n    height: 100px;\n  }\n\n  button {\n    margin-left: auto;\n    background: none;\n    border: none;\n\n    svg {\n      color: #999591;\n    }\n  }\n`;\n\nexport const HeaderProfile = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 80px;\n\n  img {\n    width: 80px;\n    height: 80px;\n    border-radius: 50%;\n  }\n\n  div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 16px;\n    line-height: 24px;\n\n    span {\n      color: #f4ede8;\n    }\n\n    a {\n      text-decoration: none;\n      color: #d02e36;\n\n      transition: opacity 0.3s;\n      &:hover {\n        opacity: 0.8;\n      }\n    }\n  }\n`;\n\nexport const Content = styled.main`\n  max-width: 1120px;\n  margin: 20px auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Table = styled.table`\nborder: 1px solid #f1f1f1;\npadding: 1em;\nmargin-top: 2em;\n`;\n","import React, {\n    useState,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n  } from 'react';\n  import { isToday, format, parseISO, isAfter } from 'date-fns';\n  import ptBR from 'date-fns/locale/pt-BR';\n  import Button from '../../components/Button';\n  import 'react-day-picker/lib/style.css';\n  import {\n    FiPower\n  } from 'react-icons/fi';\n  import { FaUserEdit } from \"react-icons/fa\";\n  import { Link, useHistory } from 'react-router-dom';\n  import * as S from './styles';\n  \n  import logoImg from '../../assets/logo.svg';\n  import { useAuth } from '../../hooks/auth';\n  import api from '../../services/api';\n\n  interface Users {\n    id: number;\n    nome: string;\n    email: string;\n    atuacao: string;\n    validade: Date;\n  }\n\n  const Dashboard: React.FC = () => {\n    const { signOut, user } = useAuth();\n    const history = useHistory();\n    const [usersList, setUsersList] = useState<Users[]>([]);\n\n    function Editar(id){\n      history.push('/alterar-validade/' + id)\n    }\n    useEffect(() => {\n        const isAdmin = user.roles.includes(\"ROLE_ADMIN\")\n        if(!isAdmin) history.push('/')\n      }, []);\n\n      useEffect(() => {\n        api\n          .get<Users[]>('/providers/lista')\n          .then(response => {\n            setUsersList(response.data);\n          });\n      }, []);\n  \n    return (\n      <S.Container>\n        <S.Header>\n          <S.HeaderContent>\n            <img src={logoImg} alt=\"Logo GoBarber\" />\n            <S.HeaderProfile>\n              <img\n                src={\n                  user.avatar_url ||\n                  'https://www.esfri.eu/sites/default/files/profileImage_nonGender-220.png'\n                }\n                alt={user.name}\n              />\n  \n              <div>\n                <span>Bem-vindo,</span>\n                <Link to=\"/profile\">\n                  <strong>{user.name}</strong>\n                </Link>\n              </div>\n            </S.HeaderProfile>\n            <button type=\"button\" onClick={signOut}>\n              <FiPower size={20} />\n            </button>\n          </S.HeaderContent>\n          \n        </S.Header>\n  \n        <S.Content>\n            <h2>Listagem de Usuários</h2>\n            <S.Table>\n            <tr style={{textAlign: 'left'}}>\n                <th>Nome</th>\n                <th>E-mail</th>\n                <th>Área de Atuação</th>\n                <th>Validade</th>\n                <th>Ações</th>\n            </tr>\n            {usersList.map((user, index) => {\n              let validade = new Date(user.validade)\n              return (\n                <tr key={index}>\n                  <td>{user.nome}</td>\n                  <td>{user.email}</td>\n                  <td>{user.atuacao}</td>\n                  <td>{format(validade, 'Pp', { locale: ptBR })}</td>\n                  <td>\n                    <Button\n                    style={{height: '30px'}}\n                      onClick={() => Editar(user.id)}\n                    >\n                      <FaUserEdit size={18} /> Editar Validade\n                    </Button>\n                  </td>\n                </tr>\n              )\n            })}\n            \n            </S.Table>\n          \n        </S.Content>\n      </S.Container>\n    );\n  };\n  \n  export default Dashboard;\n  ","import styled from 'styled-components';\r\nimport { shade, lighten } from 'polished';\r\n\r\nexport const Container = styled.div`\r\n  > header {\r\n    height: 100px;\r\n    background: #28262e;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    div {\r\n      width: 100%;\r\n      max-width: 1120px;\r\n      margin: 0 auto;\r\n\r\n      svg {\r\n        color: #999591;\r\n        transition: color 0.3s;\r\n      }\r\n\r\n      a:hover {\r\n        svg {\r\n          color: ${lighten(0.2, '#999591')};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: -176px auto 0;\r\n\r\n  width: 100%;\r\n\r\n  form {\r\n    margin: 90px 0;\r\n    width: 340px;\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    h1 {\r\n      margin-bottom: 24px;\r\n      font-size: 20px;\r\n      text-align: left;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AvatarInput = styled.div`\r\n  position: relative;\r\n\r\n  margin-bottom: 32px;\r\n  align-self: center;\r\n\r\n  img {\r\n    width: 140px;\r\n    height: 140px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  label {\r\n    position: absolute;\r\n    width: 48px;\r\n    height: 48px;\r\n    background: #d02e36;\r\n    border: none;\r\n    border-radius: 50%;\r\n    right: 0;\r\n    bottom: 0;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    transition: background-color 0.3s;\r\n    cursor: pointer;\r\n\r\n    input {\r\n      display: none;\r\n    }\r\n\r\n    &:hover {\r\n      background: ${shade(0.2, '#d02e20')};\r\n    }\r\n\r\n    svg {\r\n      color: #312e38;\r\n    }\r\n  }\r\n`;\r\n","import React, { useCallback, useRef, useEffect, useState } from 'react';\r\nimport { FiMail, FiUser, FiCalendar, FiArrowLeft } from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport { useHistory, Link, useParams } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\nimport getValidationErrors from '../../utils/getValidationErrors';\r\n\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\n\r\nimport { useToast } from '../../hooks/toast';\r\n\r\nimport { Container, Content, AvatarInput } from './styles';\r\nimport { useAuth } from '../../hooks/auth';\r\n\r\ninterface ValidadeFormData {\r\n  id: string;\r\n  validade: Date;\r\n}\r\n\r\ninterface User {\r\n  id: number;\r\n  nome: string;\r\n  email: string;\r\n  avatar_url: string;\r\n  validade: Date;\r\n}\r\n\r\nconst AtualizarValidade: React.FC = () => {\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const isAdmin = user.roles.includes(\"ROLE_ADMIN\")\r\n    if(!isAdmin) history.push('/')\r\n  }, []);\r\n\r\n  const formRef = useRef<FormHandles>(null);\r\n  const { addToast } = useToast();\r\n  const history = useHistory();\r\n  const [usuario, setUsuario] = useState<User>(null);\r\n  useEffect(() => {\r\n    api\r\n      .get<User>('/providers/g/' + id)\r\n      .then(response => {\r\n        setUsuario(response.data);\r\n      });\r\n  }, []);\r\n  const { user, updateUser } = useAuth();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: ValidadeFormData) => {\r\n      try {\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          validade: Yup.string().required('Validade é obrigatório'),\r\n        });\r\n        await schema.validate(data, { abortEarly: false });\r\n        data.id = id;\r\n        await api.post('/providers/atualizarValidade', data);\r\n\r\n        history.push('/');\r\n\r\n        addToast({\r\n          type: 'success',\r\n          title: 'Dados atualizados!',\r\n          description: 'A validade foi atualizada!',\r\n        });\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n\r\n          formRef.current?.setErrors(errors);\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro na definição dos dados',\r\n          description:\r\n            'Ocorreu um error ao atualizar a validade, tente novamente.',\r\n        });\r\n      }\r\n    },\r\n    [addToast, history],\r\n  );\r\n  if(usuario == null) return null\r\n  return (\r\n    <Container>\r\n      <header>\r\n        <div>\r\n          <Link to=\"/dashboard\">\r\n            <FiArrowLeft size={32} />\r\n          </Link>\r\n        </div>\r\n      </header>\r\n      <Content>\r\n        <Form\r\n          ref={formRef}\r\n          initialData={{ name: usuario.nome, email: usuario.email, validade: usuario.validade }}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <AvatarInput>\r\n            <img\r\n              src={\r\n                usuario.avatar_url ||\r\n                'https://api.adorable.io/avatars/186/abott@adorable.io.png'\r\n              }\r\n              alt={usuario.nome}\r\n            />\r\n          </AvatarInput>\r\n\r\n          <h1>Perfil - {usuario.nome}</h1>\r\n\r\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" disabled/>\r\n\r\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" disabled/>\r\n\r\n          <Input name=\"validade\" type=\"date\" icon={FiCalendar} placeholder=\"E-mail\" />\r\n\r\n          <Button type=\"submit\">Atualizar Validade</Button>\r\n        </Form>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AtualizarValidade;\r\n","import styled from 'styled-components';\r\nimport { shade, lighten } from 'polished';\r\n\r\nexport const Container = styled.div`\r\n  > header {\r\n    height: 100px;\r\n    background: #28262e;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    div {\r\n      width: 100%;\r\n      max-width: 1120px;\r\n      margin: 0 auto;\r\n\r\n      svg {\r\n        color: #999591;\r\n        transition: color 0.3s;\r\n      }\r\n\r\n      a:hover {\r\n        svg {\r\n          color: ${lighten(0.2, '#999591')};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: -176px auto 0;\r\n\r\n  width: 100%;\r\n\r\n  form {\r\n    margin: 90px 0;\r\n    width: 340px;\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    h1 {\r\n      margin-bottom: 24px;\r\n      font-size: 20px;\r\n      text-align: left;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AvatarInput = styled.div`\r\n  position: relative;\r\n\r\n  margin-bottom: 32px;\r\n  align-self: center;\r\n\r\n  img {\r\n    width: 140px;\r\n    height: 140px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  label {\r\n    position: absolute;\r\n    width: 48px;\r\n    height: 48px;\r\n    background: #d02e36;\r\n    border: none;\r\n    border-radius: 50%;\r\n    right: 0;\r\n    bottom: 0;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    transition: background-color 0.3s;\r\n    cursor: pointer;\r\n\r\n    input {\r\n      display: none;\r\n    }\r\n\r\n    &:hover {\r\n      background: ${shade(0.2, '#d02e20')};\r\n    }\r\n\r\n    svg {\r\n      color: #312e38;\r\n    }\r\n  }\r\n`;\r\n","import React, { useCallback, useRef, ChangeEvent } from 'react';\r\nimport { FiMail, FiUserCheck, FiLock, FiCamera, FiArrowLeft } from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\nimport getValidationErrors from '../../utils/getValidationErrors';\r\n\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\n\r\nimport { useToast } from '../../hooks/toast';\r\n\r\nimport { Container, Content, AvatarInput } from './styles';\r\nimport { useAuth } from '../../hooks/auth';\r\nimport { ConvertToBase64, getBase64 } from '../../utils/getbase64';\r\n\r\ninterface DescricaoFormData {\r\n  descricao: string;\r\n}\r\n\r\nconst Descricao: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null);\r\n  const { addToast } = useToast();\r\n  const history = useHistory();\r\n\r\n  const { user, signOut } = useAuth();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: DescricaoFormData) => {\r\n      try {\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          descricao: Yup.string().required('Descrição é obrigatório'),\r\n        });\r\n\r\n        await schema.validate(data, { abortEarly: false });\r\n\r\n        const {\r\n          descricao\r\n        } = data;\r\n\r\n        await api.post('/providers/atualizarDescricao', data);\r\n\r\n        signOut()\r\n\r\n        addToast({\r\n          type: 'success',\r\n          title: 'Descrição atualizado!',\r\n          description:\r\n            'Suas informações de descrição foram atualizadas com sucesso!',\r\n        });\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n\r\n          formRef.current?.setErrors(errors);\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro na atualização',\r\n          description:\r\n            'Ocorreu um error ao atualizar a descrição, tente novamente.',\r\n        });\r\n      }\r\n    },\r\n    [addToast, history],\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <header>\r\n        <div>\r\n          <Link to=\"/dashboard\">\r\n            <FiArrowLeft size={32} />\r\n          </Link>\r\n        </div>\r\n      </header>\r\n      <Content>\r\n        <Form\r\n          ref={formRef}\r\n          initialData={{ descricao: user.descricao}}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <AvatarInput>\r\n            <img\r\n              src={\r\n                user.avatar_url ||\r\n                'https://api.adorable.io/avatars/186/abott@adorable.io.png'\r\n              }\r\n              alt={user.name}\r\n            />\r\n          </AvatarInput>\r\n\r\n          <h1>Descrição do Perfil</h1>\r\n\r\n          <Input name=\"descricao\" type=\"text\" icon={FiUserCheck} placeholder=\"Insira sua descrição\" />\r\n\r\n          <Button type=\"submit\">Confirmar Descrição</Button>\r\n        </Form>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Descricao;\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport SignIn from '../pages/SignIn';\r\nimport SignUp from '../pages/SignUp';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport ForgotPassword from '../pages/ForgotPassword';\r\nimport ResetPassword from '../pages/ResetPassword';\r\nimport Profile from '../pages/Profile';\r\nimport UpdateAvailability from '../pages/UpdateAvailability';\r\n\r\nimport Route from './Route';\r\nimport Clientes from '../pages/Clientes';\r\nimport AtualizarValidade from '../pages/AtualizarValidade';\r\nimport Descricao from '../pages/Descricao';\r\n\r\nconst Routes: React.FC = () => (\r\n  <Switch>\r\n    <Route path=\"/\" exact component={SignIn} />\r\n    <Route path=\"/signup\" component={SignUp} />\r\n    <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n    <Route path=\"/reset-password\" component={ResetPassword} />\r\n\r\n    <Route path=\"/dashboard\" component={Dashboard} isPrivate />\r\n    <Route path=\"/clientes\" component={Clientes} isPrivate />\r\n    <Route path=\"/alterar-validade/:id\" component={AtualizarValidade} isPrivate />\r\n    <Route\r\n      path=\"/atualizar-disponibilidade\"\r\n      component={UpdateAvailability}\r\n      isPrivate\r\n    />\r\n    <Route path=\"/profile\" component={Profile} isPrivate />\r\n    <Route path=\"/descricao\" component={Descricao} isPrivate />\r\n  </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\n\r\nimport { AuthProvider } from './auth';\r\nimport { ToastProvider } from './toast';\r\n\r\nconst AppProvider: React.FC = ({ children }) => (\r\n  <AuthProvider>\r\n    <ToastProvider>{children}</ToastProvider>\r\n  </AuthProvider>\r\n);\r\n\r\nexport default AppProvider;\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport GlobalStyle from './styles/global';\r\n\r\nimport Routes from './routes';\r\n\r\nimport AppProvider from './hooks';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <BrowserRouter basename={'/painel'}>\r\n      <AppProvider>\r\n        <Routes />\r\n      </AppProvider>\r\n\r\n      <GlobalStyle />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.f426120e.svg\";","module.exports = __webpack_public_path__ + \"static/media/sign-up-background.c4d8f988.png\";","module.exports = __webpack_public_path__ + \"static/media/sign-in-background.6eac314f.png\";","module.exports = __webpack_public_path__ + \"static/media/logar-background.2330990a.jpg\";"],"sourceRoot":""}